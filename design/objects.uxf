<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>900</x>
      <y>0</y>
      <w>450</w>
      <h>600</h>
    </coordinates>
    <panel_attributes>Player
--
- Square position
- int cash
- Property[] properties
- Map&lt;int, int&gt; propertyGroupCount
- DecisionMaker decisionMaker
- int jailFreeCount
- int jailMoves

--
Getters:
+ int getCash()
+ Property[] getProperties()
+ Square getPosition()
+ int getJailFreeCount()
+ int getJailMoves()
+ boolean isPropertyGroupComplete(int propertyGroup)

Other:
+ GSC buyOrDeny(Property property, GS state)
+ GSC pay(Player player, int amount, GS state)
+ GSC bid(int highestBid, GS state)
+ boolean isInJail()
+ boolean willTrade(GSC proposal)
+ GOC notifyOf(GS newState)
+ void setPosition(Square square)
+ void changeCash(int amount)
+ void addProperties(Property[] properties)
+ void removeProperties(Property[] properties)
+ void changePropertyGroupCount(int propertyGroup, int qty)
+ void changeJailFreeCount(int qty)
+ void changeJailMoves(int qty)
+ void eliminate()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>50</x>
      <y>1370</y>
      <w>260</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>ColorProperty
--
- int numHouses

--
Getters:
+ int getNumHouses()
+ int getRentWith(int numHouses)

Other:
+ void build(int qty)
+ void demolish(int qty)
+ void demolishAll()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>0</y>
      <w>340</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>GameState (GS)
--
- Player[] players
- Square[] squares

--
Getters:
From itself:
+ Player getPlayer(int i)
+ Square getSquare(int i)
From players:
+ Player getOwner(Property property)
+ int getCash(Player player)
+ Property[] getProperties(Player player)
+ Square getPosition(Player player)
+ int getJailFreeCount(Player player)
+ int getJailMoves(Player player)
From squares:
+ int getNumHouses(ColorProperty property)
+ int getRent(Property property)
+ boolean isMortgaged(Property property)

Private:
- GS copy()

Other:
+ GS apply(GSC changes)
+ boolean areEnoughHouses(int qty)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>650</y>
      <w>220</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Engine
--
- GS state

--
Private:
- GS initialize()
- GSC roll(int playerNum)
- GSC auction()

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>0</y>
      <w>380</w>
      <h>640</h>
    </coordinates>
    <panel_attributes>GameStateChange (GSC)
--
Changes to players:
- Map&lt;Player, int&gt; changeInCash
- Map&lt;Player, Square&gt; newPosition
- Map&lt;Player, Property[]&gt; addedProperties
- Map&lt;Player, Property[]&gt; removedProperties
- Map&lt;Player, int&gt; changeInJailMoves
- Map&lt;Player, int&gt; changeInJailFreeCount
- Map&lt;Player, boolean&gt; isInGame

Changes to properties:
- Map&lt;ColorProperty, int&gt; changeInHouses
- Map&lt;Property, boolean&gt; isMortgaged

--
Getters:
For changes to players:
+ int getChangeInCash(Player player)
+ Square getNewPosition(Player player)
+ Property[] getaddedProperties(Player player)
+ Property[] getRemovedProperties(Player player)
+ int getChangeInJailMoves(Player player)
+ int getChangeInJailFreeCount(Player player)
+ boolean isInGame(Player player)
For changes to properties:
+ int getChangeInHouses(ColorProperty property)
+ boolean isMortgaged(Property property)

Static:
+ GSC combine(GSC[] changes)

Other:
+ int totalHousesBuilt()
+ int totalSpent(Player player)  // includes cash, mortgages, and house demolitions
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>650</y>
      <w>250</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>GroupOfChanges (GOC)
--
- GSC[] changes

--
+ GSC getBuildingChanges()
+ GSC getOtherChanges()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>850</x>
      <y>650</y>
      <w>370</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>DecisionMaker
--


--
+ GSC buyOrDeny(Property property, GS state)
+ GSC pay(Player player, int amount, GS state)
+ GSC bid(int highestBid, GS state)
+ boolean willTrade(GSC proposal)
+ GOC notifyOf(GS newState)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>1040</y>
      <w>260</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>Property
--
- int price
- int[] rents
- int propertyGroup  // int is a label
- boolean mortgaged

--
Getters:
+ int getPrice()
+ int getCurrentRent()
+ int getPropertyGroup()
+ boolean isMortgaged()

Other:
+ void mortgage()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>1370</y>
      <w>260</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>NonColorProperty
--


--
(implements landed())</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>850</y>
      <w>300</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Square
--


--
+ GSC landed(Player player, GS state)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>970</y>
      <w>240</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>180</x>
      <y>1320</y>
      <w>60</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>1320</y>
      <w>60</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>1040</y>
      <w>190</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>Card
--





--
(implements landed())</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>670</x>
      <y>1040</y>
      <w>190</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>Tax
--
- int tax




--
(implements landed())</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>1040</y>
      <w>190</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>GoToJail
--





--
(implements landed())</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1090</x>
      <y>1040</y>
      <w>190</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>FreeSpace
--





--
(implements landed())</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>530</x>
      <y>970</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>730</x>
      <y>970</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>970</y>
      <w>180</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>970</y>
      <w>310</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>20</x>
      <y>1060</y>
      <w>150</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>TODO - How to address rent doubling when a color group is together?
style=wordwrap
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
